<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>{% block title %}Ichimi Server - Process Manager{% endblock %}</title>
    
    <!-- Tabler CSS (ローカル) -->
    <link href="/static/css/tabler.min.css" rel="stylesheet">
    
    <!-- Tabler Icons (ローカル) -->
    <link rel="stylesheet" href="/static/css/tabler-icons.min.css">
    
    {% block styles %}{% endblock %}
</head>
<body x-data="{ theme: localStorage.getItem('theme') || 'light' }" 
      x-init="$watch('theme', val => { localStorage.setItem('theme', val); document.documentElement.setAttribute('data-bs-theme', val) })"
      :data-bs-theme="theme">
    <div class="page">
        <!-- Navbar -->
        <header class="navbar navbar-expand-md d-print-none">
            <div class="container-xl">
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbar-menu">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <h1 class="navbar-brand navbar-brand-autodark d-none-navbar-horizontal pe-0 pe-md-3">
                    <a href="/">
                        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon text-primary">
                            <circle cx="12" cy="5" r="3"/>
                            <circle cx="19" cy="12" r="3"/>
                            <circle cx="5" cy="12" r="3"/>
                            <circle cx="12" cy="19" r="3"/>
                            <line x1="12" y1="8" x2="12" y2="16"/>
                            <line x1="9.5" y1="6.5" x2="7" y2="10"/>
                            <line x1="14.5" y1="6.5" x2="17" y2="10"/>
                            <line x1="7" y1="14" x2="9.5" y2="17.5"/>
                            <line x1="17" y1="14" x2="14.5" y2="17.5"/>
                        </svg>
                        Ichimi Server
                    </a>
                </h1>
                <div class="navbar-nav flex-row order-md-last">
                    <div class="d-none d-md-flex">
                        <button @click="theme = theme === 'light' ? 'dark' : 'light'" class="nav-link px-0 hide-theme-dark" title="Enable dark mode">
                            <i class="ti ti-moon fs-2"></i>
                        </button>
                        <button @click="theme = theme === 'light' ? 'dark' : 'light'" class="nav-link px-0 hide-theme-light" title="Enable light mode">
                            <i class="ti ti-sun fs-2"></i>
                        </button>
                    </div>
                </div>
            </div>
        </header>
        
        <div class="page-wrapper">
            {% block header %}{% endblock %}
            
            <!-- Page body -->
            <div class="page-body">
                <div class="container-xl">
                    {% block content %}{% endblock %}
                </div>
            </div>
            
            <footer class="footer footer-transparent d-print-none">
                <div class="container-xl">
                    <div class="row text-center align-items-center flex-row-reverse">
                        <div class="col-lg-auto ms-lg-auto">
                            <ul class="list-inline list-inline-dots mb-0">
                                <li class="list-inline-item">
                                    <a href="https://github.com/chronista-inc/ichimi" class="link-secondary" rel="noopener">
                                        <i class="ti ti-brand-github"></i> Source code
                                    </a>
                                </li>
                            </ul>
                        </div>
                        <div class="col-12 col-lg-auto mt-3 mt-lg-0">
                            <ul class="list-inline list-inline-dots mb-0">
                                <li class="list-inline-item">
                                    &copy; 2024 Ichimi Server
                                </li>
                                <li class="list-inline-item">
                                    Version 0.1.0-beta7
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </footer>
        </div>
    </div>
    
    <!-- Tabler JS (ローカル) -->
    <script src="/static/js/tabler.min.js"></script>
    
    <!-- Global Alpine Store (Tablerの後、Alpine.jsの前に定義) -->
    <script>
        // Alpine.jsがロードされる前にストアを準備
        window.alpineStoreConfig = () => {
            Alpine.store('app', {
                version: '0.1.0-beta7',
                apiBase: '/api',
                
                async fetchData(endpoint) {
                    try {
                        const response = await fetch(`${this.apiBase}${endpoint}`);
                        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                        return await response.json();
                    } catch (error) {
                        console.error('Fetch error:', error);
                        throw error;
                    }
                },
                
                async postData(endpoint, data = {}) {
                    try {
                        const response = await fetch(`${this.apiBase}${endpoint}`, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify(data)
                        });
                        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                        return response.status === 204 ? null : await response.json();
                    } catch (error) {
                        console.error('Post error:', error);
                        throw error;
                    }
                },
                
                async deleteData(endpoint) {
                    try {
                        const response = await fetch(`${this.apiBase}${endpoint}`, {
                            method: 'DELETE'
                        });
                        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                        return response.status === 204 ? null : await response.json();
                    } catch (error) {
                        console.error('Delete error:', error);
                        throw error;
                    }
                },
                
                showToast(type, message) {
                    // Toast機能の実装（必要に応じて）
                    console.log(`[${type}] ${message}`);
                }
            });
        };
        
        // Alpine.jsがロードされたら設定を適用
        document.addEventListener('alpine:init', () => {
            window.alpineStoreConfig();
        });
    </script>
    
    <!-- Alpine.js (ローカルから読み込む) -->
    <script defer src="/static/js/alpine.min.js"></script>
    
    {% block scripts %}{% endblock %}
</body>
</html>