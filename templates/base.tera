<!DOCTYPE html>
<html lang="ja" data-theme="light">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}Ichimi Server Dashboard{% endblock %}</title>
    
    <style>
        :root[data-theme="light"] {
            --bg-primary: #ffffff;
            --bg-secondary: #f5f5f5;
            --bg-hover: #e8e8e8;
            --text-primary: #2c3e50;
            --text-secondary: #606266;
            --border-color: #dcdfe6;
            --shadow-color: rgba(0, 0, 0, 0.1);
            --accent-color: #409eff;
            --success-color: #67c23a;
            --warning-color: #e6a23c;
            --danger-color: #f56c6c;
            --card-bg: #ffffff;
        }
        
        :root[data-theme="dark"] {
            --bg-primary: #1a1a1a;
            --bg-secondary: #252525;
            --bg-hover: #333333;
            --text-primary: #e0e0e0;
            --text-secondary: #a0a0a0;
            --border-color: #404040;
            --shadow-color: rgba(0, 0, 0, 0.3);
            --accent-color: #66b1ff;
            --success-color: #85ce61;
            --warning-color: #ebb563;
            --danger-color: #f78989;
            --card-bg: #2a2a2a;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: "Hiragino Sans", "Hiragino Kaku Gothic ProN", "Noto Sans JP", -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Helvetica Neue", Arial, sans-serif;
            background-color: var(--bg-primary);
            color: var(--text-primary);
            transition: background-color 0.3s ease, color 0.3s ease;
        }
        
        header {
            background-color: var(--bg-secondary);
            border-bottom: 1px solid var(--border-color);
            padding: 1rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 4px var(--shadow-color);
        }
        
        .header-title {
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }
        
        .header-title h1 {
            font-size: 1.5rem;
            font-weight: 600;
            letter-spacing: -0.025em;
        }
        
        .logo-icon {
            width: 28px;
            height: 28px;
            stroke: var(--accent-color);
            flex-shrink: 0;
        }
        
        .header-controls {
            display: flex;
            align-items: center;
            gap: 1rem;
        }
        
        .theme-toggle {
            background: transparent;
            border: none;
            border-radius: 0.5rem;
            padding: 0.5rem;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 40px;
            height: 40px;
            transition: all 0.2s ease;
            color: var(--text-secondary);
        }
        
        .theme-toggle:hover {
            background-color: var(--bg-hover);
            color: var(--accent-color);
        }
        
        .theme-toggle:active {
            transform: scale(0.95);
        }
        
        .theme-toggle svg {
            width: 22px;
            height: 22px;
            fill: currentColor;
            stroke: currentColor;
        }
        
        .sun-icon, .moon-icon {
            display: none;
        }
        
        [data-theme="light"] .sun-icon {
            display: block;
        }
        
        [data-theme="dark"] .moon-icon {
            display: block;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }
        
        .card {
            background-color: var(--card-bg);
            border: 1px solid var(--border-color);
            border-radius: 8px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 2px 4px var(--shadow-color);
            transition: all 0.3s ease;
        }
        
        .card:hover {
            box-shadow: 0 4px 8px var(--shadow-color);
        }
        
        .status-badge {
            display: inline-block;
            padding: 0.25rem 0.75rem;
            border-radius: 1rem;
            font-size: 0.875rem;
            font-weight: 500;
        }
        
        .status-running {
            background-color: var(--success-color);
            color: white;
        }
        
        .status-stopped {
            background-color: var(--warning-color);
            color: white;
        }
        
        .status-failed {
            background-color: var(--danger-color);
            color: white;
        }
        
        .button {
            background-color: var(--accent-color);
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.875rem;
            transition: opacity 0.3s ease;
        }
        
        .button:hover {
            opacity: 0.8;
        }
        
        .button:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
        
        .process-grid {
            display: grid;
            gap: 1rem;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        }
        
        @media (max-width: 768px) {
            header {
                padding: 1rem;
            }
            
            .container {
                padding: 1rem;
            }
            
            .process-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
    
    {% block styles %}{% endblock %}
</head>
<body>
    <header>
        <div class="header-title">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="logo-icon">
                <circle cx="12" cy="5" r="3"/>
                <circle cx="19" cy="12" r="3"/>
                <circle cx="5" cy="12" r="3"/>
                <circle cx="12" cy="19" r="3"/>
                <line x1="12" y1="8" x2="12" y2="16"/>
                <line x1="9.5" y1="6.5" x2="7" y2="10"/>
                <line x1="14.5" y1="6.5" x2="17" y2="10"/>
                <line x1="7" y1="14" x2="9.5" y2="17.5"/>
                <line x1="17" y1="14" x2="14.5" y2="17.5"/>
            </svg>
            <h1>Ichimi Server</h1>
        </div>
        <div class="header-controls">
            <button class="theme-toggle" id="themeToggle" aria-label="テーマ切り替え">
                <svg class="sun-icon" viewBox="0 0 24 24">
                    <path d="M12 17.5C9.5 17.5 7.5 15.5 7.5 13S9.5 8.5 12 8.5 16.5 10.5 16.5 13 14.5 17.5 12 17.5M12 7C8.7 7 6 9.7 6 13S8.7 19 12 19 18 16.3 18 13 15.3 7 12 7M12 2L14.4 6.4L19 5.7L16.2 9.8L18.6 14L14 12.7L9.4 14L11.8 9.8L9 5.7L13.6 6.4L12 2Z"/>
                </svg>
                <svg class="moon-icon" viewBox="0 0 24 24">
                    <path d="M17.75,4.09L15.22,6.03L16.13,9.09L13.5,7.28L10.87,9.09L11.78,6.03L9.25,4.09L12.44,4L13.5,1L14.56,4L17.75,4.09M21.25,11L19.61,12.25L20.2,14.23L18.5,13.06L16.8,14.23L17.39,12.25L15.75,11L17.81,10.95L18.5,9L19.19,10.95L21.25,11M18.97,15.95C19.8,15.87 20.69,17.05 20.16,17.8C19.84,18.25 19.5,18.67 19.08,19.07C15.17,23 8.84,23 4.94,19.07C1.03,15.17 1.03,8.83 4.94,4.93C5.34,4.53 5.76,4.17 6.21,3.85C6.96,3.32 8.14,4.21 8.06,5.04C7.79,7.9 8.75,10.87 10.95,13.06C13.14,15.26 16.1,16.22 18.97,15.95M17.33,17.97C14.5,17.81 11.7,16.64 9.53,14.5C7.36,12.31 6.2,9.5 6.04,6.68C3.23,9.82 3.34,14.64 6.35,17.66C9.37,20.67 14.19,20.78 17.33,17.97Z"/>
                </svg>
            </button>
        </div>
    </header>
    
    <main class="container">
        {% block content %}{% endblock %}
    </main>
    
    <script>
        // テーマ切り替え機能
        const themeToggle = document.getElementById('themeToggle');
        const html = document.documentElement;
        
        // localStorageから保存されたテーマを取得
        const savedTheme = localStorage.getItem('theme') || 'light';
        html.setAttribute('data-theme', savedTheme);
        
        themeToggle.addEventListener('click', () => {
            const currentTheme = html.getAttribute('data-theme');
            const newTheme = currentTheme === 'light' ? 'dark' : 'light';
            
            html.setAttribute('data-theme', newTheme);
            localStorage.setItem('theme', newTheme);
        });
        
        // システムのダークモード設定を検知
        if (!localStorage.getItem('theme')) {
            const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
            if (prefersDark) {
                html.setAttribute('data-theme', 'dark');
            }
        }
    </script>
    
    {% block scripts %}{% endblock %}
</body>
</html>