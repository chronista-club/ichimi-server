document.addEventListener("alpine:init",()=>{Alpine.data("app",()=>({processes:[],showCreateModal:!1,newProcess:{id:"",command:"",args:"",cwd:"",auto_start_on_restore:!1,env:{}},async init(){await this.loadProcesses(),setInterval(()=>this.loadProcesses(),5000)},async loadProcesses(){try{let s=await fetch("/api/processes");if(s.ok)this.processes=await s.json()}catch(s){console.error("Failed to load processes:",s)}},async createProcess(){try{let s=this.newProcess.args?this.newProcess.args.split(" ").filter((r)=>r):[],e={...this.newProcess,args:s,env:{}},o=await fetch("/api/processes",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(o.ok)this.showCreateModal=!1,this.resetNewProcess(),await this.loadProcesses();else{let r=await o.text();alert("Failed to create process: "+r)}}catch(s){console.error("Failed to create process:",s),alert("Failed to create process")}},async startProcess(s){try{let e=await fetch(`/api/processes/${s}/start`,{method:"POST"});if(e.ok)await this.loadProcesses();else{let o=await e.text();alert("Failed to start process: "+o)}}catch(e){console.error("Failed to start process:",e)}},async stopProcess(s){try{let e=await fetch(`/api/processes/${s}/stop`,{method:"POST"});if(e.ok)await this.loadProcesses();else{let o=await e.text();alert("Failed to stop process: "+o)}}catch(e){console.error("Failed to stop process:",e)}},async removeProcess(s){if(!confirm(`Are you sure you want to remove process ${s}?`))return;try{let e=await fetch(`/api/processes/${s}`,{method:"DELETE"});if(e.ok)await this.loadProcesses();else{let o=await e.text();alert("Failed to remove process: "+o)}}catch(e){console.error("Failed to remove process:",e)}},resetNewProcess(){this.newProcess={id:"",command:"",args:"",cwd:"",auto_start_on_restore:!1,env:{}}}}))});
