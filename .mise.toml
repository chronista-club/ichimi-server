[tools]
bun = "latest"

[tasks."web:install"]
description = "Install Web UI dependencies"
dir = "ui/web"
run = "bun install"

[tasks.build-web]
description = "Build web UI with Bun"
depends = ["web:install"]
dir = "ui/web"
run = "bun run build"

[tasks.web]
description = "Run Vantage server with web dashboard"
run = "RUST_LOG=info cargo run --bin vantagemcp -- --web-only"

[tasks.dev]
description = "Build web console and run Vantage server"
depends = ["build-web"]
run = "RUST_LOG=info cargo run --bin vantagemcp -- --web-only"

[tasks.dev-watch]
description = "Development server with auto-reload (Rust + Web)"
run = """
    # Kill any existing processes
    pkill -f 'cargo run.*vantagemcp' || true
    # Start cargo-watch for Rust code auto-reload
    cargo watch -x 'run --bin vantagemcp -- --web-only' &
    # Store PID for cleanup
    CARGO_PID=$!
    echo "Started cargo-watch with PID: $CARGO_PID"
    # Wait for SIGTERM
    trap "kill $CARGO_PID 2>/dev/null || true" EXIT
    wait
"""

[tasks.web-watch]
description = "Watch and build web assets only"
dir = "ui/web"
run = "bun run build --watch"

# ローカルインストールタスク
[tasks.install]
description = "Build release and install to ~/.local/bin"
depends = ["build"]
run = """
    mkdir -p ~/.local/bin
    cp target/release/vantagemcp ~/.local/bin/
    chmod +x ~/.local/bin/vantagemcp
    echo "✅ Installed to ~/.local/bin/vantagemcp"
    ~/.local/bin/vantagemcp --version
"""

[tasks.install-debug]
description = "Build debug and install to ~/.local/bin (fast)"
depends = ["build-debug"]
run = """
    mkdir -p ~/.local/bin
    cp target/debug/vantagemcp ~/.local/bin/
    chmod +x ~/.local/bin/vantagemcp
    echo "✅ Installed debug build to ~/.local/bin/vantagemcp"
    ~/.local/bin/vantagemcp --version
"""

[tasks.build]
description = "Build release version"
depends = ["build-web"]
run = "cargo build --release"

[tasks.build-debug]
description = "Build debug version"
depends = ["build-web"]
run = "cargo build"

[tasks.test]
description = "Run all tests"
run = "cargo test"

[tasks.check]
description = "Check code without building"
run = "cargo check"

[tasks.clean]
description = "Clean build artifacts"
run = "cargo clean"

[tasks.uninstall]
description = "Remove vantagemcp from ~/.local/bin"
run = """
    if [ -f ~/.local/bin/vantagemcp ]; then
        rm -f ~/.local/bin/vantagemcp
        echo "✅ Uninstalled vantagemcp from ~/.local/bin"
    else
        echo "⚠️  vantagemcp not found in ~/.local/bin"
    fi
"""
