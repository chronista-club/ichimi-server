[tools]
bun = "latest"

[tasks."web:install"]
description = "Web UIの依存関係をインストール"
dir = "ui/web"
run = "bun install"

[tasks.build-web]
description = "BunでWeb UIをビルド"
depends = ["web:install"]
dir = "ui/web"
run = "bun run build"

[tasks.web]
description = "Webダッシュボード付きでVantageサーバーを実行"
run = "RUST_LOG=info cargo run --bin vantagemcp -- --web-only"

[tasks.dev]
description = "Webコンソールをビルド後、Vantageサーバーを実行"
depends = ["build-web"]
run = "RUST_LOG=info cargo run --bin vantagemcp -- --web-only"

[tasks.dev-watch]
description = "自動リロード付き開発サーバー（Rust + Web）"
run = """
    # Kill any existing processes
    pkill -f 'cargo run.*vantagemcp' || true
    # Start cargo-watch for Rust code auto-reload
    cargo watch -x 'run --bin vantagemcp -- --web-only' &
    # Store PID for cleanup
    CARGO_PID=$!
    echo "Started cargo-watch with PID: $CARGO_PID"
    # Wait for SIGTERM
    trap "kill $CARGO_PID 2>/dev/null || true" EXIT
    wait
"""

[tasks.web-watch]
description = "Webアセットのみを監視してビルド"
dir = "ui/web"
run = "bun run build --watch"

# ローカルインストールタスク
[tasks.install]
description = "リリースビルド後、~/.local/binにインストール"
depends = ["build"]
run = """
    mkdir -p ~/.local/bin
    cp target/release/vantagemcp ~/.local/bin/
    chmod +x ~/.local/bin/vantagemcp
    echo "✅ Installed to ~/.local/bin/vantagemcp"
    ~/.local/bin/vantagemcp --version
"""

[tasks.install-debug]
description = "デバッグビルドを~/.local/binにインストール（高速）"
depends = ["build-debug"]
run = """
    mkdir -p ~/.local/bin
    cp target/debug/vantagemcp ~/.local/bin/
    chmod +x ~/.local/bin/vantagemcp
    echo "✅ Installed debug build to ~/.local/bin/vantagemcp"
    ~/.local/bin/vantagemcp --version
"""

[tasks.build]
description = "リリースバージョンをビルド"
depends = ["build-web"]
run = "cargo build --release"

[tasks.build-and-install]
description = "UIをビルド後、Rustプロジェクトをビルドし、cargo installでローカルインストール"
depends = ["build-web"]
run = """
    echo "🔨 Step 1/3: UIビルド完了 ✓"
    echo ""
    echo "🔨 Step 2/3: Rustプロジェクトをビルド中..."
    cargo build --release
    echo "✅ Rustビルド完了"
    echo ""
    echo "🔨 Step 3/3: cargo installでローカルインストール中..."
    cargo install --path crates/vantage-mcp --force
    echo ""
    echo "✅ インストール完了!"
    echo ""
    echo "📍 インストール先: $(which vantagemcp)"
    vantagemcp --version || true
    echo ""
    echo "使用方法:"
    echo "  vantagemcp              # Vantage MCPサーバーを起動"
    echo "  vantagemcp --no-open    # ブラウザを開かずに起動"
    echo ""
    if pgrep -f vantagemcp > /dev/null; then
        echo "⚠️  実行中のVantageプロセスが検出されました"
        echo "再起動する場合: pkill -f vantagemcp && vantagemcp"
    fi
"""

[tasks.build-debug]
description = "デバッグバージョンをビルド"
depends = ["build-web"]
run = "cargo build"

[tasks.test]
description = "全テストを実行"
run = "cargo test"

[tasks.check]
description = "ビルドせずにコードをチェック"
run = "cargo check"

[tasks.clean]
description = "ビルド成果物をクリーン"
run = "cargo clean"

[tasks.uninstall]
description = "~/.local/binからvantagemcpを削除"
run = """
    if [ -f ~/.local/bin/vantagemcp ]; then
        rm -f ~/.local/bin/vantagemcp
        echo "✅ Uninstalled vantagemcp from ~/.local/bin"
    else
        echo "⚠️  vantagemcp not found in ~/.local/bin"
    fi
"""