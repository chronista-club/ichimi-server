name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v0.1.0)'
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            artifact: ichimi-linux-x86_64
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            artifact: ichimi-linux-aarch64
          - target: x86_64-apple-darwin
            os: macos-latest
            artifact: ichimi-macos-x86_64
          - target: aarch64-apple-darwin
            os: macos-latest
            artifact: ichimi-macos-aarch64

    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: beta
          target: ${{ matrix.target }}
          components: rustfmt, clippy
      
      - name: Install cross-compilation tools
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu
      
      - name: Build
        run: |
          if [[ "${{ matrix.target }}" == "aarch64-unknown-linux-gnu" ]]; then
            cargo build --release --target ${{ matrix.target }} --config target.aarch64-unknown-linux-gnu.linker=\"aarch64-linux-gnu-gcc\"
          else
            cargo build --release --target ${{ matrix.target }}
          fi
      
      - name: Package
        run: |
          cd target/${{ matrix.target }}/release
          tar czf ../../../${{ matrix.artifact }}.tar.gz ichimi
          cd ../../../
          sha256sum ${{ matrix.artifact }}.tar.gz > ${{ matrix.artifact }}.tar.gz.sha256
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact }}
          path: |
            ${{ matrix.artifact }}.tar.gz
            ${{ matrix.artifact }}.tar.gz.sha256

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      
      - name: Prepare release files
        run: |
          mkdir release-files
          find artifacts -name "*.tar.gz*" -exec mv {} release-files/ \;
          ls -la release-files/
      
      - name: Get version
        id: get_version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
          files: release-files/*
          body: |
            ## Installation
            
            ### Quick Install (Unix-like systems)
            ```bash
            curl -fsSL https://raw.githubusercontent.com/chronista-club/ichimi-server/main/install.sh | bash
            ```
            
            ### Homebrew (macOS/Linux)
            ```bash
            brew tap chronista-club/tap
            brew install ichimi-server
            ```
            
            ### Cargo
            ```bash
            cargo install --git https://github.com/chronista-club/ichimi-server --bin ichimi
            ```
            
            ### Manual Download
            Download the appropriate binary for your platform from the assets below.
            
            ## What's Changed
            * See [CHANGELOG.md](https://github.com/chronista-club/ichimi-server/blob/main/CHANGELOG.md) for details
            
            ## Checksums
            SHA256 checksums are provided for each binary.